// material-ui
import { useState, useEffect } from 'react';
import TextField from '@mui/material/TextField';
import Card from '@mui/material/Card';
import { number } from 'prop-types';
import Grid from '@mui/material/Unstable_Grid2';
import DataTable, { FilterComponent } from 'react-data-table-component';
import { DatePicker, Radio } from 'antd';
import { Link, useLocation, useNavigate, useParams } from 'react-router-dom';
import { Typography } from '@mui/material';
import { Space, Table, Tag, Select, Input, InputNumber } from 'antd';
import Box from '@mui/material/Box';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faPenToSquare, faCircleCheck, faCaretLeft, faCaretRight, faFloppyDisk, faXmark } from '@fortawesome/free-solid-svg-icons';
import { Upload, Button, Icon, Form, Modal, Checkbox } from 'antd';
import { TextareaAutosize } from '@mui/base';
import swal from 'sweetalert';
import User from '../../image/undraw_user.png';
import { UploadOutlined, QuestionOutlined } from '@ant-design/icons';
import moment from 'moment';
import dayjs from 'dayjs';
import './banner.css';
import { bannerdetailByApi, bannerfromsubmitByApi, uploadImgbannerApi } from 'components/Helper/bannerdetails';
let timeout;
let currentValue;
const { RangePicker } = DatePicker;
// const dateFormat = 'YYYY-MM-DD';
const dateFormat = 'DD-MM-YYYY';

const Banner = () => {
    const [loading, setloading] = useState(false);
    const [placement, SetPlacement] = useState('bottomRight');
    let { id } = useParams();
    const [form] = Form.useForm();
    const [formmodal] = Form.useForm();
    const navigate = useNavigate();
    const [fileList, setFileList] = useState([]);
    const [imgError, setImageError] = useState('');
    const { TextArea } = Input;

    const props = {
        listType: 'picture',
        defaultFileList: [...fileList],
        onRemove: (file) => {
            const index = fileList.indexOf(file);
            const newFileList = fileList.slice();
            newFileList.splice(index, 1);
            setFileList(newFileList);
        },
        beforeUpload: (file) => {
            const isPNG = file.type === 'image/png' || file.type === 'image/jpeg' || file.type === 'image/jpg';
            console.log('file', file);
            if (!isPNG) {
                setImageError(`${file.name} is not a png file`);
                message.error(`${file.name} is not a png file`);
                console.log('okkk');
                const index = fileList.indexOf(file);
                const newFileList = fileList.slice();
                newFileList.splice(index, 1);
                setFileList([]);
                return isPNG || Upload.LIST_IGNORE;
            } else {
                setImageError('');
                setFileList([...fileList, file]);
                console.log('kkkooooo');
                return false;
            }
        }
        // maxCount: 1,
    };

    useEffect(() => {
        form.setFieldValue('bannerStartDate', dayjs(new Date()));

        // form.setFieldValue('bannerEndDate', dayjs(new Date()));
    }, []);
    // const props = {
    //     name: 'file',
    //     action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',
    //     headers: {
    //         authorization: 'authorization-text'
    //     },
    //     onChange(info) {
    //         if (info.file.status !== 'uploading') {
    //             console.log(info.file, info.fileList);
    //         }
    //         if (info.file.status === 'done') {
    //             message.success(`${info.file.name} file uploaded successfully`);
    //         } else if (info.file.status === 'error') {
    //             message.error(`${info.file.name} file upload failed.`);
    //         }
    //     }
    // };
    const onFinish = (values) => {
        console.log('----------', values);
        setloading(true);
        console.log('Success:', values);
        let payloadData = {
            ...values,
            bannerStartDate: moment(new Date(values.bannerStartDate)).format('DD-MM-YYYY'),
            bannerEndDate: moment(new Date(values.bannerEndDate)).format('DD-MM-YYYY')
        };
        console.log('payloaddata', payloadData);
        bannerfromsubmitByApi(payloadData).then(
            (res) => {
                console.log('resbanner', res);
                swal('success', 'success fully', 'success');
                navigate('/Modify');
                setloading(false);
                const formData = new FormData();
                if (values.image) {
                    formData.append('files', values.image.file);
                }
                uploadImgbannerApi(formData, 'banner')
                    .then(
                        async (res) => {
                            // setloading(false);
                            console.log('imageupload', res);
                            // if (values.image) {
                            //     formData.append('files', values.image.file);
                            // }
                        },
                        (err) => {
                            console.log('error', err);
                            // setloading(false);
                            // swal('Customer', 'invalid Customer', 'success');
                        }
                    )
                    .catch();
            },
            (err) => {
                console.log(err);
                swal('err', 'Enqury Types ', 'error');
            }
        );
    };

    setloading(false);

    const onFinishFailed = (value) => {
        console.log('value', value);
    };
    const onChange = (e) => {
        console.log(`checked = ${e.target.checked}`);
    };
    const placementChange = (e) => {
        SetPlacement(e.target.value);
    };
    // <================================== End Api call ==========================================>
    return (
        <>
            <Typography variant="h5" className="mx-2">
                <small className="text-black-50" style={{ fontFamily: 'Poppins' }}>
                    Home
                </small>
                {'/'} <b> Enquiry Information </b>
            </Typography>
            <br></br>
            <Card className="driver-create-card ">
                <div className="title-main  text-start">
                    <h5>
                        {/* <FontAwesomeIcon icon={faCaretLeft} /> */}
                        {/* <span className=" ribbon">Enquiry Information </span> */}

                        {/* <FontAwesomeIcon icon={faCaretRight} /> */}
                    </h5>
                </div>
                <div>
                    <h5>
                        <span className=" text-start">
                            <b>Enquiry Information</b>
                        </span>
                    </h5>
                </div>
                <hr className="MuiDivider-root MuiDivider-fullWidth css-1wnin34-MuiDivider-root"></hr>
                <Form
                    name="frmproductgroup"
                    initialValues={{
                        remember: true
                    }}
                    form={form} // Add this!
                    layout="vertical"
                    labelCol={{ span: 22 }}
                    wrapperCol={{ span: 22 }}
                    onFinish={onFinish}
                    onFinishFailed={onFinishFailed}
                    autoComplete="off"
                >
                    <Typography variant="body2">
                        <Grid container spacing={2}>
                            <Grid item xs={12} lg={4} sm={12} xl={4}>
                                <Form.Item
                                    name="BannerLable"
                                    rules={[
                                        {
                                            required: true,
                                            message: 'Please enter Select Banner Lable.'
                                        }
                                    ]}
                                >
                                    <div class="field-wrapper">
                                        <div class="input-group">
                                            <Input name="BannerLable" className="textfont" type="text" placeholder="Enter  Banner Lable" />
                                        </div>
                                        <div class="field-placeholder">
                                            Banner Lable <span class="text-danger">*</span>
                                        </div>
                                        <samp class=" error" id="errorMobileno"></samp>
                                    </div>
                                </Form.Item>
                            </Grid>
                            <Grid item xs={12} lg={4} sm={12} xl={4}>
                                <Form.Item
                                    name="bannerHeading"
                                    rules={[
                                        {
                                            required: true,
                                            message: 'Please enter Select banner Heading .'
                                        }
                                    ]}
                                >
                                    <div class="field-wrapper">
                                        <div class="input-group">
                                            <Input
                                                name="bannerHeading"
                                                className="textfont"
                                                type="text"
                                                placeholder="Enter banner Heading"
                                            />
                                        </div>
                                        <div class="field-placeholder">
                                            banner Heading <span class="text-danger">*</span>
                                        </div>
                                        <samp class=" error" id="errorMobileno"></samp>
                                    </div>
                                </Form.Item>
                            </Grid>
                            <Grid item xs={12} lg={4} sm={12} xl={4}>
                                <Form.Item
                                    name="bannerInfo"
                                    rules={[
                                        {
                                            required: true,
                                            message: 'Please Enter banner Info.'
                                        }
                                    ]}
                                >
                                    <div class="field-wrapper">
                                        <div class="input-group">
                                            <Input name="bannerInfo" type="text" className="textfont" placeholder="Enter  Banner Info" />
                                        </div>
                                        <div class="field-placeholder">
                                            Banner Info <span class="text-danger">*</span>
                                        </div>
                                        <samp class=" error" id="errorMobileno"></samp>
                                    </div>
                                </Form.Item>
                            </Grid>
                            <Grid item xs={12} lg={2} sm={12} xl={2}>
                                <Form.Item
                                    // label="Description"
                                    name="imageupload"
                                    // rules={[
                                    //     {
                                    //         required: true,
                                    //         message: 'Please Enter Email.'
                                    //     }
                                    // ]}
                                >
                                    <div class="field-wrapper">
                                        <div class="input-group">
                                            {/* <Input
                                                // class="form-control"
                                                // id="mobileNo"
                                                name="imageupload"
                                                type="file"
                                                className="textfont"
                                                // maxlength="10"
                                                // value=""
                                                // onchange="mobileNoValidation(event)"
                                                // onkeypress="if(this.value.length==10) return false;"
                                                placeholder="Enter image upload"
                                            /> */}

                                            <Upload {...props} maxCount={1} className="textfont">
                                                <Button fullWidth className="bttunsizeset" icon={<UploadOutlined />}>
                                                    Select Image
                                                </Button>
                                            </Upload>
                                        </div>
                                        <div class="field-placeholder">
                                            imageupload <span class="text-danger">*</span>
                                        </div>
                                        <samp class=" error" id="errorMobileno"></samp>
                                    </div>
                                </Form.Item>
                                {/* <lable>{imgError}</lable> */}
                            </Grid>
                            <Grid item xs={12} lg={2} sm={12} xl={2}>
                                <Form.Item
                                    // label="Description"
                                    name="bannerStartDate"
                                    // rules={[
                                    //     {
                                    //         required: true,
                                    //         message: 'Please Enter date.'
                                    //     }
                                    // ]}
                                >
                                    <div className="field-wrapper">
                                        <div className="input-group text-dark">
                                            <DatePicker
                                                fullWidth
                                                name="bannerStartDate"
                                                defaultValue={dayjs(new Date())}
                                                format={dateFormat}
                                                disabled={[true]}
                                                className="datepicinp textfont datepicker text-dark"
                                                placement={placement}
                                                placeholder={'Enter start Date'}
                                            />
                                        </div>
                                        <div className="field-placeholder">
                                            Start Date <span className="text-danger">*</span>
                                        </div>
                                        <samp className=" error" id="errorMobileno"></samp>
                                    </div>
                                </Form.Item>
                            </Grid>
                            <Grid item xs={12} lg={2} sm={12} xl={2}>
                                <Form.Item
                                    // label="Description"
                                    name="bannerEndDate"
                                    rules={[
                                        {
                                            required: true,
                                            message: 'Please Enter date.'
                                        }
                                    ]}
                                >
                                    <DatePicker
                                        fullWidth
                                        name="bannerEndDate"
                                        format={dateFormat}
                                        className="datepicinp textfont"
                                        placement={placement}
                                        placeholder={'Enter end Date'}
                                    />
                                </Form.Item>
                                <span className="textlabel">
                                    End Date<span className="text-danger">*</span>{' '}
                                </span>
                            </Grid>
                            {/* <Grid item xs={12} lg={4} sm={12} xl={4}></Grid> */}
                            <Grid item xs={12} lg={2} sm={12} xl={2}>
                                <Form.Item
                                    // label="Description"
                                    name="Checkbox"
                                    // rules={[
                                    //     {
                                    //         required: true,
                                    //         message: 'Please enter Department Name.'
                                    //     }
                                    // ]}
                                >
                                    <Checkbox onChange={onChange}>
                                        <b>Verify</b>
                                    </Checkbox>
                                </Form.Item>
                            </Grid>
                        </Grid>
                        <Grid item xs={12} lg={12} sm={12} xl={12}>
                            <Form.Item>
                                <div>
                                    <Button
                                        className="btn btn-danger m-1 text-center  float-end"
                                        style={{ paddingtop: '3px', height: '38px' }}
                                    >
                                        <FontAwesomeIcon icon={faXmark} className="mx-1" />
                                        Cancel
                                    </Button>
                                </div>
                                <div>
                                    <Button
                                        type="primary"
                                        htmlType="submit"
                                        className="btn btn-primary m-1 text-center  float-end"
                                        style={{ height: '38px' }}
                                        loading={loading}
                                        // disabled={!email || email === ''}
                                    >
                                        <FontAwesomeIcon icon={faFloppyDisk} className="mx-1" />
                                        Save
                                    </Button>
                                </div>
                            </Form.Item>
                        </Grid>
                    </Typography>
                    {/* </MainCard> */}
                </Form>
            </Card>
        </>
    );
};

export default Banner;
